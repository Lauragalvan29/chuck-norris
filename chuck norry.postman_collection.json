{
	"info": {
		"_postman_id": "f75b7660-5405-4946-ab2a-169cf67941aa",
		"name": "chuck norry",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39657950"
	},
	"item": [
		{
			"name": "Chistes aleatorios",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test to check if the API is online and available to respond to requests\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.chucknorris.io/jokes/random",
					"protocol": "https",
					"host": [
						"api",
						"chucknorris",
						"io"
					],
					"path": [
						"jokes",
						"random"
					]
				}
			},
			"response": [
				{
					"name": "Chistes aleatorios",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.chucknorris.io/jokes/random",
							"protocol": "https",
							"host": [
								"api",
								"chucknorris",
								"io"
							],
							"path": [
								"jokes",
								"random"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Categoría determinada",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the response content\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var category = pm.variables.get(\"category\");\r",
							"    pm.expect(jsonData.categories).includes(category);\r",
							"    pm.expect(jsonData.value).isString();\r",
							"});\r",
							"pm.test(\"Verify handling of invalid or unknown category parameter\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
							"    pm.expect(pm.response.body).to.include(\"HTTP Status 400 – Bad Request\");\r",
							"});\r",
							"pm.sendRequest({\r",
							"    url: 'https://api.chucknorris.io/jokes/random?category=dev&category=movie',\r",
							"    method: 'GET',\r",
							"    header: {\r",
							"        'Content-Type': 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw'\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    pm.test(\"Verify behavior when passing multiple categories\", function () {\r",
							"        pm.expect(res.code).to.equal(200);\r",
							"        pm.expect(res.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"        var jsonData = res.json();\r",
							"        pm.expect(jsonData.categories).to.eql([\"dev\", \"movie\"]);\r",
							"        pm.expect(jsonData.value).isString();\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.chucknorris.io/jokes/random?category={category}",
					"protocol": "https",
					"host": [
						"api",
						"chucknorris",
						"io"
					],
					"path": [
						"jokes",
						"random"
					],
					"query": [
						{
							"key": "category",
							"value": "{category}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Categorías disponibles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response format and category list\", function () {\r",
							"    pm.response.to.be.json; // Verify response is in JSON format\r",
							"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty; // Verify response is a non-empty array\r",
							"});// Test for handling multiple simultaneous requests\r",
							"pm.test(\"Verify response is not empty and contains valid categories\", function () {\r",
							"    pm.response.to.be.json; // Verify response is in JSON format\r",
							"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty; // Verify response is a non-empty array\r",
							"    pm.expect(pm.response.json()).to.include.members([\"animal\"]); // Verify response contains valid categories\r",
							"});pm.test(\"Multiple simultaneous requests are handled correctly\", function () {\r",
							"    // Send the first request\r",
							"    pm.sendRequest('https://api.chucknorris.io/jokes/categories', function (err, response) {\r",
							"        pm.expect(response).to.have.status(200);\r",
							"    });\r",
							"\r",
							"    // Send the second request\r",
							"    pm.sendRequest('https://api.chucknorris.io/jokes/categories', function (err, response) {\r",
							"        pm.expect(response).to.have.status(200);\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.chucknorris.io/jokes/categories",
					"protocol": "https",
					"host": [
						"api",
						"chucknorris",
						"io"
					],
					"path": [
						"jokes",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Texto libre",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should be a valid JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Empty search term should return 400 status code\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"});\r",
							"pm.test(\"Response body should contain expected fields\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('total');\r",
							"    pm.expect(pm.response.json()).to.have.property('result');\r",
							"});pm.test(\"Empty search term should return 400 status code\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"});\r",
							"pm.test(\"Response body should contain expected fields\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('total');\r",
							"    pm.expect(pm.response.json()).to.have.property('result');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.chucknorris.io/jokes/search?query={query}",
					"protocol": "https",
					"host": [
						"api",
						"chucknorris",
						"io"
					],
					"path": [
						"jokes",
						"search"
					],
					"query": [
						{
							"key": "query",
							"value": "{query}"
						}
					]
				}
			},
			"response": []
		}
	]
}